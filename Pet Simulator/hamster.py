import random
import time

is_hamster_alive = True
hamster_status = {
    "hunger": 100,
    "happiness": 100,
    "cleanliness": 100,
    "age": 0,
    "dead": False,
}

def show_hamster_intro():
    print(r"""
                                                    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                                    ‚°†‚†Ä‚¢Ñ‚°Ä‚†Ä‚£Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚°¥‚†â‚†Ä‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                                    ‚¢á‚†Ä‚†Ä‚£ø‚£æ‚£Ø‚£ç‚£Ω‚£ø‚£ø‚£ø‚°§‚¢Ä‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                                    ‚†Ä‚†ë‚¢º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£∑‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                                    ‚†Ä‚¢∏‚£ø‚£ø‚£ü‚£ª‚£ø‚£ø‚£ø‚£≠‚£ø‚£ø‚£ø‚£ø‚°ü‚†¢‚°Ä‚†Ä‚†Ä‚†Ä
                                                    ‚†Ä‚¢∏‚°è‚¢ª‚£ø‚¢ø‚£ø‚£ø‚£ø‚°ø‚£ø‚°ü‚£ø‚†ü‚†Ä‚†Ä‚£ø‚£¶‚†Ä‚†Ä
                                                    ‚†Ä‚¢∏‚†õ‚†Æ‚†ù‚¢ã‚†ô‚£ª‚£ä‚¢Å‚†à‚†ö‚¢É‚£Ä‚£¥‚£æ‚£ø‚£ø‚£∑‚°Ä
                                                    ‚†Ä‚£æ‚£∂‚£§‚°†‚†Ä‚†â‚†Ä‚†à‚¢Ä‚¢Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚£ß
                                                    ‚†Ä‚†ø‚°ü‚†õ‚†ª‚†∑‚£∂‚†Ä‚£∂‚†ü‚†ã‚†õ‚£ø‚†ó‚†à‚†à‚†â‚¢†‚£™‚£ø
                                                    ‚†Ä‚†∏‚°à‚†ô‚£Ñ‚°Ä‚¢∏‚¢∏‚°ø‚£Ñ‚°¶‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚°†‚£∫‚£ø‚£ø
                                                    ‚†Ä‚†Ä‚†ô‚¢¢‚°§‚†ô‚†õ‚°è‚£Ö‚£†‚†∂‚†ñ‚†í‚†í‚†à‚†Å‚†ê‚¢æ‚£ø‚°è
                                                    ‚†Ä‚†Ä‚†Ä‚†à‚°Ñ‚†Ä‚†Ä‚†∏‚£ø‚°∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚¢†‚£ø‚£ø‚†É
                                                    ‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†¶‚£Ä‚†Ä‚£ø‚£∑‚£¶‚†Ñ‚†Ä‚†Ä‚†Ä‚¢ù‚£ø‚£ø‚°ü‚†Ä
                                                    ‚†Ä‚†Ä‚†Ä‚£§‚£§‚£Ñ‚£ä‚°â‚†ü‚†ø‚¢ø‚°∑‚†ó‚†ö‚£≤‚†Ω‚†ø‚†ü‚†Å‚†Ä
    """)
    print("This is your hamster. Take good care of it.")

    if random.randint(1, 100) == 1:
        show_monstrosity()

def show_monstrosity():
    print(r"""
        ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°¥‚†í‚†í‚†í‚†í‚†í‚†í‚†í‚†¶‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚£∂‚£∂‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚£§‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚°ã‚£Ñ‚£Ä‚†∏‚£ø‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£¥‚†ü‚†ã‚†ª‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£æ‚£ø‚£ø‚£ø‚£ø‚£∑‚†à‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Å‚£†‚£æ‚£ø‚£ø‚£ø‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£Ø‚£ø‚£ø‚£∑‚£ø‚£π‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†ã‚¢ª‚£ø‚£ø‚£ø‚£ø‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°§‚†û‚†ã‚¢∏‚£ø‚£ø‚£ø‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢ø‚°ø‚°á‚†ò‚¢∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†û‚†â‚†Ä‚†Ä‚†Ä‚†à‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚¢∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢≥‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚†ö‚°ü‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚£µ‚£Ä‚£Ä‚£Ä‚£Ø‚£∑‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∑‚°∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†û‚†Å‚†Ä‚†Ä‚†∏‚†∂‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†Å‚†æ‚†ø‚°π‚†ã‚†ª‚†ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚†û‚¢≥‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†Å‚†Ä‚†Ä‚†ª‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚£†‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚£∂‚¢ñ‚†™‚†≠‚¢ø‚£¶‚£§‚†ø‚†ü‚£õ‚†∂‚£§‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°º‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°Ä‚†Ä‚†à‚†ü‚†≤‚†∂‚†∂‚£¶‚£∂‚£¶‚£¨‚£Å‚£≠‚£∂‚†ø‚¢ø‚£Ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                ‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚¢¶‚°Ä‚†Ä‚†í‚¢∑‚£∂‚£Ñ‚£å‚£ë‚£ª‚£ü‚†â‚¢°‚£¥‚†ü‚†Å‚†Ä‚†Ä‚¢Ä‚£§‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
                                ‚†Ä‚†Ä‚†Ä‚†Ä‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚£¶‚†Ä‚†Ä‚†à‚†â‚†â‚†õ‚†õ‚†õ‚†õ‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚¢†‚°û‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä
                                ‚†Ä‚†Ä‚†Ä‚£º‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°û‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£¶‚†Ä‚†Ä‚†Ä
                                ‚†Ä‚†Ä‚£∏‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°æ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚°Ü‚†Ä‚†Ä
                                ‚†Ä‚††‚°ü‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†≥‚†§‚¢§‚£Ä‚£Ä‚£†‚†§‚†§‚†§‚†¥‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∑‚°Ä‚†Ä
                                ‚†Ä‚¢∏‚°Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ß‚†Ä
                                ‚†Ä‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚£†
                                ‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°Ä‚†∞‚£§‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£æ‚°õ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø
                                ‚†Ü‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚¢∑‚£æ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏
                                ‚†Ä‚¢∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚°á
        """)
    print("CONGRATS! You somehow got this monstrosity of a hamster. It stares into your soul.")

def name_hamster():
    name = input("What do you want to name your hamster? ")
    print(f"So the name is: {name}")
    accept = input("Do you like the name? (yes/no): ").lower()

    if accept == "yes":
        print(f"Great! {name} is now your pet hamster.")
        return name
    else:
        print("Alright, let's try again.")
        return name_hamster()

def care_loop():
    show_hamster_intro()
    hamster_name = name_hamster()

    while True:
        if hamster_status["dead"]:
            print("\nüíÄ Your hamster has died. Game over.")
            break

        print(f"\nWhat would you like to do with {hamster_name}?")
        print("1. Feed")
        print("2. Play")
        print("3. Clean")
        print("4. AFK (Do nothing and let time pass)")
        print("5. Check Status")
        print("6. Quit")

        choice = input("Choose an option: ")

        if choice == "1":
            hamster_status["hunger"] = min(hamster_status["hunger"] + 10, 100)
            print(f"{hamster_name} enjoyed the food! üçé")
        elif choice == "2":
            hamster_status["happiness"] = min(hamster_status["happiness"] + 10, 100)
            print(f"{hamster_name} had fun playing! üß∏")
        elif choice == "3":
            hamster_status["cleanliness"] = min(hamster_status["cleanliness"] + 10, 100)
            print(f"{hamster_name} is clean and happy! üõÅ")
        elif choice == "4":
            print(f"{hamster_name} is left alone...")
            afk_event(hamster_name)
        elif choice == "5":
            print_status(hamster_name)
        elif choice == "6":
            print("Thanks for playing!")
            break
        else:
            print("Invalid choice.")

        # Update hamster stats and check if dead after each action
        update_stats()

        time.sleep(1)


def update_stats():
    hamster_status["age"] += 1
    hamster_status["hunger"] -= 5
    hamster_status["happiness"] -= 5
    hamster_status["cleanliness"] -= 5

    if hamster_status["hunger"] <= 0 or hamster_status["happiness"] <= 0 or hamster_status["cleanliness"] <= 0:
        hamster_status["dead"] = True
        print("\nüíÄ Your hamster has died due to neglect. You can no longer take care of it.")
        
def afk_event(name):
    event = random.randint(1, 4)

    if event == 1:
        print(f"{name} just took a nap. Nothing happened.")
    elif event == 2:
        print(f"{name} chewed on a paper towel. It was fun.")
    elif event == 3:
        print(f"{name} got startled by a loud noise.")
    elif event == 4:
        print(f"üíÄ Tragedy! {name} escaped and fell behind the dresser.")
        hamster_status["dead"] = True

def print_status(name):
    print("\nüêπ Hamster Status:")
    if hamster_status["dead"]:
        print(f"{name} is DEAD üíÄ")
    else:
        print(f"Hunger: {hamster_status['hunger']}")
        print(f"Happiness: {hamster_status['happiness']}")
        print(f"Cleanliness: {hamster_status['cleanliness']}")
        print(f"Age: {hamster_status['age']}")
        print(f"Dead: {hamster_status['dead']}")
        print(f"Name: {name}")
        print(f"Status: {'Alive' if not hamster_status['dead'] else 'Dead'}")